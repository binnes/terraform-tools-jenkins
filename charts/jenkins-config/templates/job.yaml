{{ if .Values.createJob -}}
apiVersion: batch/v1
kind: Job
metadata:
    name: {{ include "jenkins-config.fullname" . }}
spec:
    template:
        spec:
            serviceAccountName: jenkins
            initContainers:
              - name: wait-for-jenkins
                image: docker.io/alpine:latest
                imagePullPolicy: IfNotPresent
                command: ["sh", "-c"]
                args:
                  - apk add curl; 
                    until curl -Iksf ${JENKINS_URL}; 
                    do echo '>>> waiting for Jenkins'; 
                    sleep 30; 
                    done; 
                    echo '>>> Jenkins has started'
                env:
                - name: JENKINS_URL
                  value: {{ printf "%s/login" (include "jenkins-config.url" .) }}
            containers:
                - name: jenkins-config
                  image: garagecatalyst/node11:latest
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - name: certs
                      mountPath: /tmp/certs
                  command: ["bash", "-c"]
                  args:
                    - sudo apt-get install -y libnss3-tools;
                      [ -d ~/.pki/nssdb ] || mkdir -p ~/.pki/nssdb;
                      certutil -d sql:$HOME/.pki/nssdb -N --empty-password;
                      certutil -d sql:$HOME/.pki/nssdb -A -n 'ingress cert authority' -i /tmp/certs/rootCA_crt.pem -t 'TCP,TCP,TCP';
                      export NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace);
                      npm i -g @garage-catalyst/ibm-garage-cloud-cli@0.2.20-puppeteer && echo $NAMESPACE && ~/.npm-packages/bin/igc jenkins-auth --inCluster -n ${NAMESPACE}
                  env:
                      - name: JENKINS_HOST
                        value: {{ .Values.jenkins.host | quote }}
                      - name: JENKINS_URL
                        value: {{ include "jenkins-config.url" . }}
                      - name: JENKINS_USERNAME
                        valueFrom:
                            secretKeyRef:
                                name: jenkins
                                key: jenkins-admin-user
                      - name: JENKINS_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: jenkins
                                key: jenkins-admin-password
            volumes:
            - name: certs
              secret:
                secretName: tls-ca          
            restartPolicy: Never
    backoffLimit: 4
{{ end -}}
